name: Create VPS (Auto-Restart & Safe)

on:
  workflow_dispatch:
  repository_dispatch:
    types: [create-vps]

jobs:
  start-vps:
    runs-on: ubuntu-latest
    timeout-minutes: 354  # 5h54m to stop safely before 6h GitHub limit
    env:
      TMATE_SERVER: nyc1.tmate.io

    steps:
      - name: ⬇️ Checkout
        uses: actions/checkout@v3

      - name: 📁 Prepare dirs
        run: mkdir -p links .backup

      - name: 💾 Restore backup (from transfer.sh link)
        run: |
          if [ -f last_backup_url.txt ]; then
            url=$(cat last_backup_url.txt)
            echo "Downloading backup from $url"
            curl -s --fail "$url" -o vps_backup.tar.gz || echo "⚠️ Failed to download backup"
            tar -xzf vps_backup.tar.gz || echo "⚠️ Failed to extract backup"
          else
            echo "⚠️ No backup link found, starting fresh"
          fi

      - name: 🔐 Start tmate session
        run: |
          sudo apt update -y && sudo apt install -y tmate
          tmate -S /tmp/tmate.sock new-session -d
          tmate -S /tmp/tmate.sock wait tmate-ready
          SSH=$(tmate -S /tmp/tmate.sock display -p '#{tmate_ssh}')
          echo "$SSH" | tee "links/${{ github.event.client_payload.vps_name || 'manual-vps' }}.txt"

      - name: 🚀 Start Playit Tunnel
        run: |
          wget -q https://github.com/playit-cloud/playit-agent/releases/latest/download/playit-linux-amd64 -O playit
          chmod +x playit
          nohup ./playit > playit.log 2>&1 &
          echo "✅ Playit started."

      - name: ⏳ Keep VPS alive (5h54m loop)
        run: |
          i=1
          while [ $i -le 354 ]; do
            echo "🟢 Running minute $i/354..."
            command sleep 60 || break
            i=$((i+1))
          done

      - name: 📦 Final backup before timeout
        run: |
          echo "Creating backup archive..."
          tar czf vps_backup.tar.gz ./data ./scripts ./configs 2>/dev/null || tar czf vps_backup.tar.gz . 
          echo "Uploading to transfer.sh..."
          url=$(curl --upload-file vps_backup.tar.gz https://transfer.sh/vps_backup.tar.gz)
          echo "🆙 Backup uploaded: $url"
          echo $url > last_backup_url.txt

      - name: 🔄 Pull latest changes (avoid push rejection)
        run: |
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          git pull --rebase origin main || true

      - name: 📤 Save SSH link + backup URL
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "🔁 Updated SSH + backup URL"
          file_pattern: 'links/*.txt last_backup_url.txt'

      - name: 🔁 Restart workflow automatically
        if: always()
        run: |
          curl -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "Content-Type: application/json" \
            https://api.github.com/repos/${{ github.repository }}/dispatches \
            -d '{"event_type": "create-vps", "client_payload": {"vps_name": "manual-vps", "backup": true}}'
